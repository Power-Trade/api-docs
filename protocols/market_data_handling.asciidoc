[[Reference_Data]]
=== Reference Data

ifeval::[{for_internal_use} == true]
The reference data is _a key information_ disseminated by Market Data Service and Accounts Management Service during each cycle as it provides the descriptors of all products currently available for trading in current cycle of the exchange (about exchange cycles please read in <<Introduction,Introduction>> and <<Managing_Cycles,Sessions, Channels, Streams and Cycles>>).
endif::[]

ifeval::[{for_internal_use} == false]
The reference data is _a key information_ disseminated by Market Data Service during each cycle as it provides the descriptors of all products currently available for trading in current cycle of the exchange (about exchange cycles please read in <<Introduction,Introduction>> and <<Managing_Cycles,Sessions, Channels, Streams and Cycles>>).
endif::[]

API clients should properly keep reference data available for usage in all API Services and, for example, to encode/decode all monetary values (as explained in <<Monetary_Values, Monetary Values>>).

[[Reference_Data_Messages_Table]]
ifeval::[{for_internal_use} == true]
.*Reference Data* messages included in Market Data and Accounts Management message sets:
endif::[]
ifeval::[{for_internal_use} == false]
.*Reference Data* messages included in Market Data message set:
endif::[]
[width="80%",options="header"]
|=================================
| Name | Description
| <<deliverable_ltfx_spot_gt,deliverable<fx_spot>>>
| Reference data for a single spot deliverable.
| <<deliverable_ltfuture_gt,deliverable<future>>>
| Reference data for a single future deliverable.
| <<deliverable_ltoption_gt,deliverable<option>>>
| Reference data for a single option deliverable.
| <<deliverable_ltexchange_token_gt,deliverable<exchange_token>>>
| Reference data for an exchange token deliverable.
| <<deliverable_ltstable_token_gt,deliverable<stable_token>>>
| Reference data for a stable token deliverable.
| <<deliverable_ltfiat_currency_gt,deliverable<fiat_currency>>>
| Reference data for a fiat currency deliverable.
| <<tradeable_entity_ltsimple_market_gt,tradeable_entity<simple_market>>>
| Reference data for a tradeable entity that is traded using a simple, single market.
| <<trading_rule,trading_rule>>
| A trading rule that determines order and trade validation.
|=================================

[[Service_Guide_Market_Data]]
=== Market Data

Market Data Service provides information essential for trading on PowerTrade exchange, including <<Reference_Data, Reference Data>>.

As mentioned in <<Managing_Cycles, Sessions, Channels, Streams and Cycles>> chapter, trading session goes thru _multiple cycles_ and, in turn, each cycle also goes thru 3 phases: *prolog*, *real-time*, *epilog*.

It is important to understand how corresponding information "carries over" the state of all related items (orders, markets, products etc) between cycles.

At *prolog* phase, Market Data service sends to clients all essential information needed to prepare for participating in *real-time* part:

* Reference data for existing deliverables and and tradeable entities (e.g. <<deliverable,deliverable>>, <<tradeable_entity, tradeable_entity>>);

* The state of the tradeable entities as the beginning of the cycle (<<trading_state,trading_state>>);

* Restatement of display orders that were already open before the cycle started (<<display_order_added, display_order_added>>);

* Top of book information if there are open orders (<<top_of_book, top_of_book>>).

At *epilog* phase, Market Data service may send information about deletions for orders that are expiring (<<display_order_deleted, display_order_deleted>> for orders who have reached the end of their <<time_in_force, time_in_force>> set to *"good_for_cycles"*).

[[market_data_protocol]]
.Diagram of *Market Data Protocol*
plantuml::protocols/puml/market_data_protocol.puml[format=svg,opts=inline,align=center]

The corresponding message set can be found in <<Market_Data_Messages,Market Data Messages>>.