@startuml accounts_management_protocol

' to support time duration and delays:
'!pragma teoz true

'skinparam handwritten true
'skinparam shadowing false

'skinparam monochrome true
skinparam sequenceMessageAlign center

'skinparam title {
'    BorderRoundCorner 5
'    BorderThickness 1
'    BorderColor black
'    BackgroundColor WhiteSmoke
'}

    '<font color=black>Warning:</font>
right header
    <size:12><&warning>Do not test in production, test in [[#WS_API_Services_Sandbox sandbox]]</size>
endheader

right footer <size:15><&bolt></size> <size:9>[[https://power.trade PowerTrade Exchange]]</size>

'entity Client
'entity Server

group <b>[[#session_control_with_auth Session Control Protocol]]</b>

    ... <b>Note</b>: for simplicity, heartbeating ...
    ... is not shown here but it is <b>required</b> ...
    ... <b>to keep session alive</b> ...

    group <b>Accounts Management Protocol</b>
        group i-Cycle

            Client <- Server : <b>[[#cycle_starting cycle_starting]]</b>

            group prolog
                Client <- Server : <b>key [[#Reference_Data Reference Data]]</b>
            end

            Client <- Server : <b>[[#cycle_started cycle_started]]</b>

            group real-time

                group account adding
                    |||
                    Client -> Server : <b>[[#add_account_ltsimple_account_gt add_account<simple_account>]]</b>
                    ... in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_added_ltsimple_account_gt account_added<simple_account>]]</b>
                    ... in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltadd_account_ltsimple_account_gt_gt account_action_rejected<add_account<simple_account>>]]</b>
                end
                group account removal
                    ... 1. using known [[#account_id account_id]] : ...
                    Client -> Server : <b>[[#remove_account_ltaccount_id_gt remove_account<account_id>]]</b>
                    ... 1a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_removed account_removed]]</b>
                    ... 1b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltremove_account_ltaccount_id_gt_gt account_action_rejected<remove_account<account_id>>]]</b>
                    ... 2. or using known [[#account_token account_token]] : ...
                    Client -> Server : <b>[[#remove_account_ltaccount_token_gt remove_account<account_token>]]</b>
                    ... 2a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_removed account_removed]]</b>
                    ... 2b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltremove_account_ltaccount_token_gt_gt account_action_rejected<remove_account<account_token>>]]</b>
                end
                group account suspending
                    ... 1. using known [[#account_id account_id]] : ...
                    Client -> Server : <b>[[#suspend_account_ltaccount_id_gt suspend_account<account_id>]]</b>
                    ... 1a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_suspended account_suspended]]</b>
                    ... 1b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltsuspend_account_ltaccount_id_gt_gt account_action_rejected<suspend_account<account_id>>]]</b>
                    ... 2. or using known [[#account_token account_token]] : ...
                    Client -> Server : <b>[[#suspend_account_ltaccount_token_gt suspend_account<account_token>]]</b>
                    ... 2a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_suspended account_suspended]]</b>
                    ... 2b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltsuspend_account_ltaccount_token_gt_gt account_action_rejected<suspend_account<account_token>>]]</b>
                end
                group resuming suspended account
                    ... 1. using known [[#account_id account_id]] : ...
                    Client -> Server : <b>[[#unsuspend_account_ltaccount_id_gt unsuspend_account<account_id>]]</b>
                    ... 1a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_unsuspended account_unsuspended]]</b>
                    ... 1b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltunsuspend_account_ltaccount_id_gt_gt account_action_rejected<unsuspend_account<account_id>>]]</b>
                    ... 2. or using known [[#account_token account_token]] : ...
                    Client -> Server : <b>[[#unsuspend_account_ltaccount_token_gt unsuspend_account<account_token>]]</b>
                    ... 2a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_unsuspended account_unsuspended]]</b>
                    ... 2b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltunsuspend_account_ltaccount_token_gt_gt account_action_rejected<unsuspend_account<account_token>>]]</b>
                end
                group adding [[#mobile_app_account mobile_app_account]]:
                    |||
                    Client -> Server : <b>[[#add_account_ltmobile_app_account_gt add_account<mobile_app_account>]]</b>
                    ... in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_updated_ltmobile_app_account_gt account_updated<mobile_app_account>]]</b>
                    ... in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltadd_account_ltmobile_app_account_gt_gt account_action_rejected<add_account<mobile_app_account>>]]</b>
                end
                group updating [[#mobile_app_account mobile_app_account]]:
                    ... 1. using known [[#account_id account_id]] : ...
                    Client -> Server : <b>[[#update_account_ltaccount_id_commamobile_app_account_gt update_account<account_id,mobile_app_account>]]</b>
                    ... 1a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_updated_ltmobile_app_account_gt account_updated<mobile_app_account>]]</b>
                    ... 1b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltupdate_account_ltaccount_id_commamobile_app_account_gt_gt account_action_rejected<update_account<account_id,mobile_app_account>>]]</b>
                    ... 2. or using known [[#account_token account_token]] : ...
                    Client -> Server : <b>[[#update_account_ltaccount_token_commamobile_app_account_gt update_account<account_token,mobile_app_account>]]</b>
                    ... 2a. in case of <b>success</b>: ...
                    Client <- Server : <b>[[#account_updated_ltmobile_app_account_gt account_updated<mobile_app_account>]]</b>
                    ... 2b. in case of <b>failure</b>: ...
                    Client <- Server : <b>[[#account_action_rejected_ltupdate_account_ltaccount_token_commamobile_app_account_gt_gt account_action_rejected<update_account<account_token,mobile_app_account>>]]</b>
                end
                group examples of asynchronous [[#account_notifications account notifications]]:
                    ... account <b>consistency marker</b>: ...
                    Client <- Server : <b>[[#account_consistency_marker account_consistency_marker]]</b>
                    ... other account notifications: ...
                    Client <- Server : <b>[[#account_restated_ltsimple_account_gt account_restated<simple_account>]]</b>
                    Client <- Server : <b>[[#account_updated_ltmobile_app_account_gt account_updated<mobile_app_account>]]</b>
                    Client <- Server : <b>[[#account_restated_ltmobile_app_account_gt account_restated<mobile_app_account>]]</b>
                    ... and so on ...
                end
            end

            Client <- Server : <b>[[#cycle_ending cycle_ending]]</b>
            ... empty epilog phase ...
            Client <- Server : <b>[[#cycle_ended cycle_ended]]</b>
        end
        ... and so on ...
    end
end

@enduml
